<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
<style type="text/css">
	* { margin: 0; padding: 0;}

	body, html { height:100%; }
	body {background-color: #432}
</style>
<title>Доска</title>
</head>
<body onload="bodyonload();" background="images/backboard.jpg">
<div class="canvases">
	<canvas id="board" width="320" height="460"></canvas>
</div>
<script type="text/javascript">
	function Board(id, x, y, w, h, m, n) {
		var self = this;
		this.canvas = document.getElementById(id);
		this.ctx = this.canvas.getContext('2d');
		this.pos = {x: x, y: y};
		this.size = {w: w, h: h};
		this.dim = {m: m, n: n};
		this.canvas.addEventListener("click", function(e) {
			self.canvasclick.apply(self, [e]);
		});		
		this.data = new Array(Math.ceil(n*m));
	}

	Board.prototype.WHITE =   {main: '#eee', light: '#fff', dark: '#888'};
	Board.prototype.BLACK =   {main: '#333', light: '#666', dark: '#000'};
	Board.prototype.RED =     {main: '#933', light: '#fff', dark: '#311'};
	Board.prototype.YELLOW =  {main: '#993', light: '#fff', dark: '#331'};
	Board.prototype.GREEN =   {main: '#393', light: '#fff', dark: '#131'};
	Board.prototype.CYAN =    {main: '#399', light: '#fff', dark: '#133'};
	Board.prototype.BLUE =    {main: '#339', light: '#fff', dark: '#113'};
	Board.prototype.MAGENTA = {main: '#939', light: '#fff', dark: '#313'};
	Board.prototype.GRAY =    {main: '#999', light: '#ddd', dark: '#333'};

	Board.prototype.COLORS = [
		null, 
		Board.prototype.WHITE, 
		Board.prototype.BLACK, 
		Board.prototype.RED, 
		Board.prototype.YELLOW, 
		Board.prototype.GREEN, 
		Board.prototype.CYAN, 
		Board.prototype.BLUE, 
		Board.prototype.MAGENTA, 
		Board.prototype.GRAY];

	Board.prototype.canvasclick = function(e) {
		var 
			i = Math.floor((e.pageX - this.canvas.offsetLeft - this.pos.x)*this.dim.m/this.size.w), 
			j = Math.floor((e.pageY - this.canvas.offsetTop - this.pos.y)*this.dim.n/this.size.h);
		if (i<0 || j<0 || i>=this.dim.m || j>=this.dim.n) return;
		if (this.onclick != null) this.onclick(i, j);
	}

	Board.prototype.draw = function() {
		this.field(2);
	}

	Board.prototype.field = function(pd) {
		var 
			fx = this.pos.x, 
			fy = this.pos.y, 
			fw = this.size.w, 
			fh = this.size.h,
			cx = fx+pd, 
			cy = fy+pd, 
			cw = Math.floor((fw-pd)/this.dim.m)-pd, 
			ch = Math.floor((fh-pd)/this.dim.n)-pd, 
			sx = Math.floor((fw-pd)/this.dim.m), 
			sy = Math.floor((fh-pd)/this.dim.n);

		//this.rrect(fx+3, fy+3, fw, fh, 4, "rgba(0, 0, 200, 0.5)");
		this.ctx.clearRect(fx, fy, fw, fh);
		this.rrect(fx, fy, fw, fh, 4, 'rgba(200, 200, 200, 0.25)');

		for (var i = 0; i < this.dim.m; i++) 
			for (var j = 0; j < this.dim.n; j++) {
				this.rrect(cx+i*sx, cy+j*sy, cw, ch, pd, 'rgba(50, 50, 50, 0.25)');
				this.rrect(cx+1+i*sx, cy+1+j*sy, cw-1, ch-1, pd, 'rgba(220, 220, 220, 0.25)');
				this.ball(cx+i*sx+0.5*cw, cy+j*sy+0.5*ch, 13, this.data[Math.floor(i+j*this.dim.m)]);
		}
	}

	Board.prototype.rrect = function(x, y, w, h, r, c) {
		var qu = 0.5*Math.PI;
		this.ctx.beginPath();
		this.ctx.arc(x+r, y+h-r-1, r, qu, 2*qu);
		this.ctx.lineTo(x, y+r);
		this.ctx.arc(x+r, y+r, r, 2*qu, 3*qu);
		this.ctx.lineTo(x+w-r-1, y);
		this.ctx.arc(x+w-r-1, y+r, r, 3*qu, 0);
		this.ctx.lineTo(x+w-1, y+h-r-1);
		this.ctx.arc(x+w-r-1, y+h-r-1, r, 0, qu);
		this.ctx.fillStyle = c;
		this.ctx.fill();
		this.ctx.closePath();	
	}

	Board.prototype.ball = function(x, y, r, cs) {
		var pi2 = 2*Math.PI;
		if (cs == null) return;
		//this.ballShadow(x, y, r);
		this.ctx.beginPath();
		this.ctx.arc(x, y, r, 0, Math.PI*2, true);
		var gradient = this.ctx.createRadialGradient(x-r/2, y-r/2, 0, x, y, r);
		gradient.addColorStop(0, cs.main);
		gradient.addColorStop(1, cs.dark);
		this.ctx.fillStyle = gradient;
		this.ctx.fill();
		this.ctx.closePath();

		this.ctx.beginPath();
		this.ctx.arc(x, y, r*0.7, Math.PI/180*270, Math.PI/180*180, true);
		this.ctx.lineTo(x-r, y-r);
		gradient = this.ctx.createRadialGradient(x-r*.5, y-r*.5, 0, x, y, r);
		gradient.addColorStop(0, cs.light);
		gradient.addColorStop(0.5, 'transparent');
		this.ctx.fillStyle = gradient;
		this.ctx.fill();
		this.ctx.closePath();
    }

    Board.prototype.ballShadow = function(x, y, r) {
		this._canvas.draw({
		  fn: function(ctx) {
		  	ctx.beginPath();
			ctx.arc(x+r*.125, y+r*.25, r*1.5, 0, Math.PI*2, true);
			var gradient = ctx.createRadialGradient(x+r*.125, y+r*.25, 0, x+r*.25, y+r*.5, r*1.3);
			gradient.addColorStop(0, '#000000');
			gradient.addColorStop(1, 'transparent');
			ctx.fillStyle = gradient;
			ctx.fill();
			ctx.closePath();
		  }
		});
    }

	bodyonload = function() {
		window.board = new Board("board", 4, 4+100, 312, 312, 10, 10);
		window.board.selectedTool = window.board.BLUE;
		window.board.onclick = function(i, j) {
			this.data[Math.floor(i+j*this.dim.m)] = this.selectedTool;
			this.draw();
		}

		window.tools = new Board("board", 4, 324+100, 312, 32, 10, 1);
		window.tools.data = window.tools.COLORS.slice(0);
		window.tools.onclick = function(i, j) {
			this.selectedTool = Math.floor(i);
			window.board.selectedTool = this.data[this.selectedTool];
			this.draw();
		}

		window.board.draw();
		window.tools.draw();		
	}

</script>
</body>
</html>